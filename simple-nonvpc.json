{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Description" : "Template to create an Aerospike cluster",
	"Parameters" : {

		"KeyPair" : {
			"Description" : "Name of the KeyPair that should be used to allow ssh access to the instances",
			"Type" : "String"
		},

		"NumberOfInstances" : {
			"Description" : "Number of instances in the cluster",
			"Type" : "Number",
			"Default" : "2"
		},

		"InstanceType" : {
			"Description" : "Type of EC2 instance to launch",
			"Type" : "String",
			"Default" : "m3.medium"
		}
	},

	"Mappings" : {
		"AWSRegionalAMIs" : {
			"us-east-1" : {"v3" : "ami-729f611a" },
			"us-west-2" : {"v3" : "ami-01f28f31" },
			"us-west-1" : {"v3" : "ami-886e68cd" },
			"eu-west-1" : {"v3" : "ami-e96fa69e" },
			"ap-southeast-1" : {"v3" : "ami-aa0956f8" },
			"ap-southeast-2" : {"v3" : "ami-2112761b" },
			"ap-northeast-1" : {"v3" : "ami-3f6e263e" },
			"sa-east-1" : {"v3" : "ami-49be1154" }
		},

		"HorribleHackForSubtraction" : {
			"1" : {"MinusOne" : "0"},
			"2" : {"MinusOne" : "1"},
			"3" : {"MinusOne" : "2"},
			"4" : {"MinusOne" : "3"},
			"5" : {"MinusOne" : "4"},
			"6" : {"MinusOne" : "5"},
			"7" : {"MinusOne" : "6"},
			"8" : {"MinusOne" : "7"},
			"9" : {"MinusOne" : "8"},
			"10" : {"MinusOne" : "9"},
			"11" : {"MinusOne" : "10"},
			"12" : {"MinusOne" : "11"},
			"13" : {"MinusOne" : "12"},
			"14" : {"MinusOne" : "13"},
			"15" : {"MinusOne" : "14"},
			"16" : {"MinusOne" : "15"}
		}
	},

	"Resources" : {
		"FirstInstance" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"InstanceType" : { "Ref" : "InstanceType"},
				"KeyName" : { "Ref" : "KeyPair"},
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionalAMIs", { "Ref" : "AWS::Region" }, "v3" ] },
				"SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
				"Monitoring" : "true",
				"AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [
					"#!/bin/bash\n",
					"echo FirstinstancesScriptStart > /var/log/awsuserdatascript\n",
					"\t###To remove the mesh-address and mesh-port lines which are not needed in the first node\n",
					"\tsed -i 's/mesh-address .*//g' /etc/aerospike/aerospike.conf\n",
					"\tsed -i 's/mesh-port .*//g' /etc/aerospike/aerospike.conf\n",
					"\t/etc/init.d/aerospike start\n",
					"\t/etc/init.d/amc start\n",
					"echo FirstInstanceScriptFinsh >> /var/log/awsuserdatascript\n" 
					] ] }
				}
			}
		},

		"ClusterGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
				"DesiredCapacity" : { "Fn::FindInMap" : [ "HorribleHackForSubtraction", { "Ref" : "NumberOfInstances"}, "MinusOne" ] },
				"MinSize" : "1",
				"MaxSize" : "15",
				"AvailabilityZones" : [ { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] } ]
			}
		},

		"LaunchConfig" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"InstanceType" : { "Ref" : "InstanceType"},
				"KeyName" : { "Ref" : "KeyPair" },
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionalAMIs", { "Ref": "AWS::Region" }, "v3" ] },
				"SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"echo OtherinstancesScriptStart > /var/log/awsuserdatascript\n",
					"echo \"Mesh principle's IP address is \"", { "Fn::GetAtt" : [ "FirstInstance", "PrivateIp"] }," > /var/log/awsuserdatascript\n",
					"\t###Point to the first instance using the mesh-address config option\n",
					"\tsed -i \"s/.*mesh-address .*/\t\tmesh-address ", { "Fn::GetAtt" : [ "FirstInstance", "PrivateIp"] }, "/g\" /etc/aerospike/aerospike.conf\n",
					"\t/etc/init.d/aerospike start\n",
					"\t/etc/init.d/amc start\n",
					"echo OtherinstancesScriptFinish >> /var/log/awsuserdatascript\n" 
					] ] }
				}
			}
		},

		"InstanceSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable ports needed by SSH and Aerospike and XDR",
				"SecurityGroupIngress" : [ {
					"IpProtocol" : "tcp",
					"FromPort" : "22",
					"ToPort" : "22",
					"CidrIp" : "0.0.0.0/0"
				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "3000",
					"ToPort" : "3004",
					"CidrIp" : "0.0.0.0/0"

				},
				{
					"IpProtocol" : "tcp",
					"FromPort" : "8081",
					"ToPort" : "8081",
					"CidrIp" : "0.0.0.0/0"

				},
				{
					"IpProtocol" : "icmp",
					"FromPort" : "-1",
					"ToPort" : "-1",
					"CidrIp" : "0.0.0.0/0"
				} ]
			}
		}
	}
}
